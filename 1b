import numpy as np
import pandas as pd
importmatplotlib.pyplot as plt
%matplotlib inline



df=pd.read_csv("housing_prices_SLR.csv",delimiter=',')
df.head()



x=df[['AREA']].values#feature Matrix
y=df.PRICE.values#Target Matrix
x[:5] #slicing
y[:5]




from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=100)


print(x_train.shape)
print(x_test.shape)
print(x_train.shape)
print(x_test.shape)


From sklearn.linear_model import Linear Regression
lr_model= Linear Regression()
lr_model.fit(x_train,y_train)
print(lr_model.intercept_) # (PRICE=(-4481.80028058845)+8.65903854)*AREA
print(lr_model.coef_)#y=c+mx


lr_model=Linear Regression(fit_intercept= False)
lr_model.fit(x_train,y_train)
print(lr_model.intercept_) # (PRICE=(-4481.80028058845)+8.65903854)*AREA
print(lr_model.coef_)#y=c+mx


From sklearn.metrics import r2_score
y_train
lr_model.predict(x_train)


r2_score(y_train,lr_model.predict(x_train))


r2_score(y_test,lr_model.predict(x_test))


lr_model.score(x_test,y_test) #2.second way of calculating R2 score



plt.scatter(x_train[:,0],y_train,c='red')
plt.scatter(x_test[:,0],y_test,c='blue')
plt.plot(x_train[:,0],lr_model.predict(x_train),c='y')
